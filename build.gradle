buildscript {
    ext {
        springBootVersion = '2.6.6'
        dependencyManagementVersion = '1.0.11.RELEASE'
        asciidoctorVersion = '1.5.8'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE"
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.moviemang'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '1.8'

    repositories {
        mavenCentral()
    }

    dependencies {
    	implementation 'org.springframework.boot:spring-boot-starter'
    	testImplementation('org.springframework.boot:spring-boot-starter-test'){
    		exclude group: 'com.vaadin.external.google'
    	}
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.apache.commons:commons-lang3:3.5'
        implementation 'org.apache.commons:commons-collections4:4.1'
		implementation 'com.google.guava:guava:31.1-jre'
        testImplementation group: 'junit', name: 'junit', version: '4.13.2'
        implementation('com.mashape.unirest:unirest-java:1.4.9')
        
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

project(':apis:member-api-server'){
    dependencies {
        implementation project(':core:core-utils')
        implementation project(':core:datastore')
        implementation project(':core:security')
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    }
}

project(':apis:main-api-server'){
    dependencies {
        compileOnly project(':core:core-utils')
        compileOnly project(':core:datastore')
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    }
}

project(':apis:playlist-api-server'){
    dependencies {
        compileOnly project(':core:core-utils')
        compileOnly project(':core:datastore')
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    }
}

project(':core:datastore'){
    dependencies {
        compileOnly project(':core:core-utils')
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    }
}
project(':core:security'){
    dependencies {
        compileOnly project(':core:core-utils')
        compileOnly project(':core:datastore')
    }
}
